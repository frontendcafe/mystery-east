[{"/home/juan/projects/mystery-east/src/index.js":"1","/home/juan/projects/mystery-east/src/App.js":"2","/home/juan/projects/mystery-east/src/views/Home.js":"3","/home/juan/projects/mystery-east/src/views/Details.js":"4","/home/juan/projects/mystery-east/src/components/EpisodesList.js":"5"},{"size":178,"mtime":1612697741543,"results":"6","hashOfConfig":"7"},{"size":424,"mtime":1613950018990,"results":"8","hashOfConfig":"7"},{"size":697,"mtime":1613948933826,"results":"9","hashOfConfig":"7"},{"size":880,"mtime":1613950203378,"results":"10","hashOfConfig":"7"},{"size":960,"mtime":1613949546838,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1k99xwn",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/home/juan/projects/mystery-east/src/index.js",[],["24","25"],"/home/juan/projects/mystery-east/src/App.js",[],"/home/juan/projects/mystery-east/src/views/Home.js",[],"/home/juan/projects/mystery-east/src/views/Details.js",[],"/home/juan/projects/mystery-east/src/components/EpisodesList.js",["26"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst EpisodesList = ({ showData }) => {\n  const [currentSeason, setCurrentSeason] = useState(2);\n\n  return (\n    <div>\n      <h3>Seasons</h3>\n      <div>\n        {showData?._embedded.seasons.map(season => (\n          <button\n            key={season.id}\n            onClick={() => setCurrentSeason(season.number)}\n          >\n            S{season.number}\n          </button>\n        ))}\n      </div>\n      <h3>episodes</h3>\n      <ul>\n        {showData?._embedded.episodes.map(episode => {\n          if (episode.season === currentSeason)\n            return (\n              <li key={episode.id}>\n                <Link\n                  to={`/season/${episode.season}/episode/${episode.number}`}\n                >\n                  {episode.name}\n                </Link>\n              </li>\n            );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default EpisodesList;\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":22,"column":51,"nodeType":"33","messageId":"34","endLine":22,"endColumn":53},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]